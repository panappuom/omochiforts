---
import cfg from "../config/site.config.json";
import agents from "../data/peek-agents.json";
const { title = "おもち要塞 / OmochiForts" } = Astro.props;
const agentsJson = JSON.stringify(agents);
// gap/BPをconfigから
const gap = cfg?.layout?.gap ?? {};
const spx = ((gap.sp?.x) ?? 4) + "px";
const spy = ((gap.sp?.y) ?? 4) + "px";
const pcx = ((gap.pc?.x) ?? 16) + "px";
const pcy = ((gap.pc?.y) ?? 16) + "px";
const bp  = cfg?.layout?.breakpoint ?? "521px";

// CSSはAstroのimportで読み込む（/srcを<link>しない）
import "../styles/global.css";

---

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="おもち要塞 / OmochiForts" />
    {import.meta.env.PUBLIC_DEPLOY_TARGET === 'prod' && Astro.site && (
      <link rel="canonical" href={new URL(Astro.url.pathname, Astro.site).toString()} />
    )}
    {import.meta.env.PUBLIC_DEPLOY_TARGET === 'pages' && (
      <>
        <meta name="robots" content="noindex, nofollow, noarchive" />
        <meta name="googlebot" content="noindex, nofollow, noimageindex" />
      </>
    )}

    <!-- favicons -->
    <!-- 基本 favicon -->
    <link rel="icon" href="/icons/favicon.ico" sizes="16x16 32x32 48x48">

    <!-- 汎用 PNG アイコン -->
    <link rel="icon" type="image/png" sizes="16x16" href="/icons/icon-16x16.png">
    <link rel="icon" type="image/png" sizes="24x24" href="/icons/icon-24x24.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/icons/icon-32x32.png">
    <link rel="icon" type="image/png" sizes="36x36" href="/icons/icon-36x36.png">
    <link rel="icon" type="image/png" sizes="48x48" href="/icons/icon-48x48.png">
    <link rel="icon" type="image/png" sizes="72x72" href="/icons/icon-72x72.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/icons/icon-96x96.png">
    <link rel="icon" type="image/png" sizes="128x128" href="/icons/icon-128x128.png">
    <link rel="icon" type="image/png" sizes="144x144" href="/icons/icon-144x144.png">
    <link rel="icon" type="image/png" sizes="152x152" href="/icons/icon-152x152.png">
    <link rel="icon" type="image/png" sizes="160x160" href="/icons/icon-160x160.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/icons/icon-192x192.png">
    <link rel="icon" type="image/png" sizes="196x196" href="/icons/icon-196x196.png">
    <link rel="icon" type="image/png" sizes="256x256" href="/icons/icon-256x256.png">
    <link rel="icon" type="image/png" sizes="384x384" href="/icons/icon-384x384.png">
    <link rel="icon" type="image/png" sizes="512x512" href="/icons/icon-512x512.png">

    <!-- Android Chrome -->
    <link rel="icon" type="image/png" sizes="36x36" href="/icons/android-chrome-36x36.png">
    <link rel="icon" type="image/png" sizes="48x48" href="/icons/android-chrome-48x48.png">
    <link rel="icon" type="image/png" sizes="72x72" href="/icons/android-chrome-72x72.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/icons/android-chrome-96x96.png">
    <link rel="icon" type="image/png" sizes="128x128" href="/icons/android-chrome-128x128.png">
    <link rel="icon" type="image/png" sizes="144x144" href="/icons/android-chrome-144x144.png">
    <link rel="icon" type="image/png" sizes="152x152" href="/icons/android-chrome-152x152.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/icons/android-chrome-192x192.png">
    <link rel="icon" type="image/png" sizes="256x256" href="/icons/android-chrome-256x256.png">
    <link rel="icon" type="image/png" sizes="384x384" href="/icons/android-chrome-384x384.png">
    <link rel="icon" type="image/png" sizes="512x512" href="/icons/android-chrome-512x512.png">

    <!-- Apple Touch Icons -->
    <link rel="apple-touch-icon" sizes="57x57" href="/icons/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/icons/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/icons/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/icons/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/icons/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/icons/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/icons/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/icons/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon-180x180.png">

    <meta name="apple-mobile-web-app-title" content="おもち要塞" />

    <!-- PWA / Safari pinned tab -->
    <link rel="manifest" href="/manifest.webmanifest">
    <link rel="mask-icon" href="/icons/safari-pinned-tab.svg" color="#625F59">
    <meta name="theme-color" content="#625F59">
    
    <!-- Peek Agent CSS -->
    <link rel="stylesheet" href="/src/styles/peek-agent.css" />
    <!-- iOS Safari用（古いがまだ必要） -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- Android Chrome用（推奨） -->
    <meta name="mobile-web-app-capable" content="yes">

    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="msapplication-TileColor" content="#625F59">

    <!-- Windows / MS Tiles -->
    <meta name="msapplication-square70x70logo" content="/icons/site-tile-70x70.png">
    <meta name="msapplication-square150x150logo" content="/icons/site-tile-150x150.png">
    <meta name="msapplication-wide310x150logo" content="/icons/site-tile-310x150.png">
    <meta name="msapplication-square310x310logo" content="/icons/site-tile-310x310.png">

    <!-- 設定駆動のCSSカスタムプロパティをSSRで注入（set:htmlでリテラル展開） -->
    <style is:global set:html={`
      :root{
        --gx-sp: ${spx};
        --gy-sp: ${spy};
        --gx-pc: ${pcx};
        --gy-pc: ${pcy};
        /* 実際に使う値（デフォはSP） */
        --gx: var(--gx-sp);
        --gy: var(--gy-sp);
      }
      @media (min-width: ${bp}){
        :root{ --gx: var(--gx-pc); --gy: var(--gy-pc); }
      }
    `} />
  </head>
  <body>
    <slot />
    
    <!-- Peek Agent JS -->
    <script is:inline>{`window.__PEEK = ${agentsJson};`}</script>
    <script type="module" src="/src/scripts/peek-agent.js"></script>
    
    <script is:inline>
      // 本番ビルド時だけ Service Worker を登録する
      if ('serviceWorker' in navigator && import.meta.env.PROD) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js');
        });
      }
    </script>
    
  </body>
</html>
